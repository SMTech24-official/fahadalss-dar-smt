generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String     @unique
  password        String
  role            UserRole
  status          UserStatus @default(ACTIVE)
  phone           String?
  isEmailVerified Boolean    @default(false)
  isDeleted       Boolean    @default(false)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  otp             String?
  otpExpiry       DateTime?

  @@map("users")
}
model Client {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  phone     String?
  status    UserStatus @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("clients")
}   

// model KYCRequest {
//   id         String    @id @default(auto()) @map("_id") @db.ObjectId
//   investorId String    @db.ObjectId
//   status     KycStatus @default(PENDING)
//   document   String
//   reason     String?
//   createdAt  DateTime  @default(now())
//   updatedAt  DateTime  @updatedAt

//   investor Investor @relation(fields: [investorId], references: [id])

//   @@map("kyc_requests")
// }

enum UserRole {
  ADMIN
  INVESTOR
  COMPANY
}

enum CampaignType {
  EQUITY
  BOND
  CONVERTIBLE
}

enum CampaignStatus {
  DRAFT
  PENDING_APPROVAL
  LIVE
  COMPLETED
  REJECTED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}

enum KycStatus {
  PENDING
  APPROVED
  REJECTED
}

enum DocumentType {
  DECK
  CONTRACT
  TERMS
  OTHER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUPENDED
}

enum VerificationStatus {
  PENDING
  APPROVED
  REJECTED
}
